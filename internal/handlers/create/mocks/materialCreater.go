// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	"github.com/KillReall666/schooldocumentmanagment/internal/model"
	context "context"

	mock "github.com/stretchr/testify/mock"

	time "time"

	uuid "github.com/google/uuid"
)

// publicationCreater is an autogenerated mock type for the publicationCreater type
type publicationCreater struct {
	mock.Mock
}



// CreatePublication provides a mock function with given fields: ctx, ID, model.CreatePublication
func (_m *publicationCreater) CreatePublication(ctx context.Context, ID uuid.UUID, material model.CreatePublication) error {
	ret := _m.Called(ctx, ID, material.MaterialType, material.Status, material.Title, material.Content, material.CreatedAt, material.UpdatedAt)

	if len(ret) == 0 {
		panic("no return value specified for CreatePublication")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, string, string, string, string, time.Time, time.Time) error); ok {
		r0 = rf(ctx, ID, material.MaterialType, material.Status, material.Title, material.Content, material.CreatedAt, material.UpdatedAt)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMaterialCreater creates a new instance of publicationCreater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPublicationCreater(t interface {
	mock.TestingT
	Cleanup(func())
}) *publicationCreater {
	mock := &publicationCreater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
